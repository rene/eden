---
name: Test

on:  # yamllint disable-line rule:truthy
  workflow_dispatch:
    inputs:
      eden_version:
        type: string
        required: false
        default: ''  # if not provided: When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event. Otherwise, uses the default branch.
      eve_image:
        type: string
      eve_log_level:
        type: string
        required: false
        default: 'debug'
      eve_artifact_name:
        type: string
      artifact_run_id:
        type: string
  workflow_call:
    inputs:
      eden_version:
        type: string
        required: false
        default: ''  # if not provided: When checking out the repository that triggered a workflow, this defaults to the reference or SHA for that event. Otherwise, uses the default branch.
      eve_image:
        type: string
      eve_log_level:
        type: string
        required: false
        default: 'debug'
      eve_artifact_name:
        type: string
      artifact_run_id:
        type: string

jobs:
  determine-runner:
    name: Determine best available runner
    runs-on: ubuntu-latest
    outputs:
      runner: ${{ steps.fork-check.outputs.runner }}
      runner_virt: ${{ steps.fork-check.outputs.runner_virt }}
    steps:
      - id: fork-check
        run: |
          if [[ "${{ github.event.repository.full_name}}" == "rene/eve" ]] || [[ "${{ github.event.repository.full_name}}" == "rene/eden" ]]; then
            echo "runner=['buildjet-4vcpu-ubuntu-2204', 'buildjet-pinned-7950x']" >> "$GITHUB_OUTPUT"
            echo "runner_virt=['buildjet-4vcpu-ubuntu-2204', 'buildjet-pinned-7950x']" >> "$GITHUB_OUTPUT"
          else
            echo "runner=['ubuntu-22.04']" >> "$GITHUB_OUTPUT"
            echo "runner_virt=['ubuntu-22.04']" >> "$GITHUB_OUTPUT"
          fi

  smoke:
    env:
      JOB_NAME: Smoke
    name: env.JOB_NAME
    strategy:
      fail-fast: false
      matrix:
        file_system: ['ext4', 'zfs']
        tpm: [true, false]
    needs: determine-runner
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }} (${{ matrix.file_system }}, ${{ matrix.tpm }})
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
          # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
          if [ "$PREV_ATTEMPT" -le 0 ]; then
            echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
            exit 0
          fi
          prev_conclusion=$(
            gh api \
              -X GET \
              repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
              -q ".jobs[] | select(.name | contains(\"${{ env.FULL_JOB_NAME }}\")) | .conclusion"
          )
          if [ -z "$prev_conclusion" ]; then
            echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
            exit 1
          fi
          echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: ${{ matrix.file_system }}
          tpm_enabled: ${{ matrix.tpm }}
          suite: "smoke.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
          aziot_id_scope: ${{ secrets.AZIOT_ID_SCOPE }}
          aziot_connection_string: ${{ secrets.AZIOT_CONNECTION_STRING }}

  networking:
    env:
      JOB_NAME: Networking
    name: env.JOB_NAME
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name == \"${{ env.FULL_JOB_NAME }}\") | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: "ext4"
          tpm_enabled: true
          suite: "networking.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}

  storage:
    env:
      JOB_NAME: Storage
    name: env.JOB_NAME
    strategy:
      fail-fast: false
      matrix:
        file_system: ['ext4', 'zfs']
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }} (${{ matrix.file_system }})
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name | contains(\"${{ env.FULL_JOB_NAME }}\")) | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: ${{ matrix.file_system }}
          tpm_enabled: true
          suite: "storage.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}

  lps-loc:
    env:
      JOB_NAME: LPS/LOC
    name: env.JOB_NAME
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }}
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name == \"${{ env.FULL_JOB_NAME }}\") | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: "ext4"
          tpm_enabled: true
          suite: "lps-loc.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}

  eve-upgrade:
    env:
      JOB_NAME: EVE Upgrade
    name: env.JOB_NAME
    strategy:
      fail-fast: false
      matrix:
        file_system: ['ext4', 'zfs']
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }} (${{ matrix.file_system }})
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name | contains(\"${{ env.FULL_JOB_NAME }}\")) | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: ${{ matrix.file_system }}
          tpm_enabled: true
          suite: "eve-upgrade.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}

  user-apps:
    env:
      JOB_NAME: User Apps
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }}
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name == \"${{ env.JOB_NAME }}\") | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in previous attempt" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: "ext4"
          tpm_enabled: true
          suite: "user-apps.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}

  virtualization:
    env:
      JOB_NAME: Virtualization
    name: env.JOB_NAME
    needs: [determine-runner]
    runs-on: ${{ fromJSON(needs.determine-runner.outputs.runner_virt) }}
    steps:
      - name: Print Public IP Address
        run: |
          echo "Public IP Address of the runner:"
          curl -s https://api.ipify.org
        shell: bash
      - name: Check job status from previous attempt
        id: prev_attempt
        env:
          GITHUB_TOKEN: ${{ github.token }}
          FULL_JOB_NAME: ${{ env.JOB_NAME }}
          PREV_ATTEMPT: ${{ github.run_attempt - 1 }}
        run: |
            # For the first attempt, we don't need to check the previous attempt, just set conclusion to 'skipped'
            if [ "$PREV_ATTEMPT" -le 0 ]; then
                echo "conclusion=skipped" >> "$GITHUB_OUTPUT"
                exit 0
            fi
            prev_conclusion=$(
                gh api \
                -X GET \
                repos/${GITHUB_REPOSITORY}/actions/runs/${GITHUB_RUN_ID}/attempts/${PREV_ATTEMPT}/jobs \
                -q ".jobs[] | select(.name == \"${{ env.FULL_JOB_NAME }}\") | .conclusion"
            )
            if [ -z "$prev_conclusion" ]; then
                echo "Could not find matching job in attempt ${PREV_ATTEMPT}" >&2
                exit 1
            fi
            echo "conclusion=$prev_conclusion" >> "$GITHUB_OUTPUT"
      - name: Dockerhub Login
        if: ${{ github.event.repository.full_name == 'rene/eve' && steps.prev_attempt.outputs.conclusion != 'success' }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_PULL_USER }}
          password: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
      - name: Get code
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: actions/checkout@v4.1.1
        with:
          repository: "rene/eden"
          ref: ${{ inputs.eden_version }}
          path: "./eden"
      - name: Run tests
        if: steps.prev_attempt.outputs.conclusion != 'success'
        uses: ./eden/.github/actions/run-eden-test
        with:
          file_system: "ext4"
          tpm_enabled: true
          suite: "virtualization.tests.txt"
          eve_image: ${{ inputs.eve_image }}
          eve_log_level: ${{ inputs.eve_log_level }}
          eve_artifact_name: ${{ inputs.eve_artifact_name }}
          artifact_run_id: ${{ inputs.artifact_run_id }}
          require_virtualization: true
          docker_account: ${{ secrets.DOCKERHUB_PULL_USER }}
          docker_token: ${{ secrets.DOCKERHUB_PULL_TOKEN }}
